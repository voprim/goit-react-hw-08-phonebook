{"version":3,"file":"static/js/681.26fe6cbb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/selectors.js","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nexport function Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setContactName] = useState('');\n  const [number, setContactNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    setContactName('');\n    setContactNumber('');\n  };\n  const handleChangeName = e => {\n    if (e.target.type === 'text') {\n      setContactName(e.target.value);\n    }\n  };\n  const handleChangeNumber = e => {\n    if (e.target.type === 'tel') {\n      setContactNumber(e.target.value);\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          placeholder=\"Orest Orestovich\"\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          placeholder=\"123-45-67\"\n        />\n      </label>\n      <button className={css.btn} type=\"submit\" onSubmit={handleSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { selectContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(state => state.filter.filter).toLowerCase();\n\n  const onFilterChange = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n  const onDeleteContact = e => {\n    dispatch(deleteContact(e.target.id));\n  };\n\n  return (\n    <ul className={css.list}>\n      {onFilterChange().map(({ id, name, number }) => (\n        <li className={css.item} key={id}>\n          <p className={css.info}>\n            {name}: {number}\n          </p>\n          <button\n            className={css.btn}\n            type=\"button\"\n            id={id}\n            onClick={onDeleteContact}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  //onDeleteContact: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filtersSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  //onChange: PropTypes.func.isRequired,\n};\n\n// value={filter}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Container } from 'components/Container/Container';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from '../redux/operations';\nimport { selectIsLoading, selectError, selectContacts } from '../redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter />\n      )}\n      {isLoading && !error && (\n        <p>Please wait...</p>\n      )}\n      {contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","children","className","css","ContactForm","useState","name","setContactName","number","setContactNumber","dispatch","useDispatch","handleSubmit","e","preventDefault","addContact","onSubmit","type","value","onChange","target","placeholder","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactList","useSelector","filterValue","filter","toLowerCase","onDeleteContact","deleteContact","id","contact","includes","map","onClick","Filter","setFilter","useEffect","fetchContacts","length"],"sourceRoot":""}